<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create surface, draw everything to it, deactivate all other instances

surf = surface_create( 1024, 1024 );
// Unfortunately, for this method to work, the surface has to be the size of the entire room and not just the size of the view.
// So, if you have a very large room size, this method may not work well for you...   :(

surface_set_target(surf);
draw_clear_alpha(c_black, 0); // Clears surface.

draw_background_tiled(background_index[0], view_xview[0], view_yview[0]);
// This is required if you want the background to be blurred as well.
// If you have more than one background, or your background isn't tiled, you'll have to change this.

with(all) { if (visible == true) { event_perform(ev_draw,0); } }   // Draws every visible instance to surface.
surface_reset_target();

instance_deactivate_all(true);
visible = true;

size = 1.5; // Change this amount to change the amount of blur

selected = "RESUME";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This alarm should ONLY be used when the surface is lost.
// The following is the same that happens in the create event. It is just redrawing all the instances to the surface.

surface_set_target(surf);
draw_clear_alpha(c_black, 0);  
draw_background_tiled(background_index[0], view_xview[0], view_yview[0]);
with(all) { if (visible == true) { event_perform(ev_draw,0); } } 
surface_reset_target();
instance_deactivate_all(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear surface

surface_free(surf); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_font(menu_title);
/// Draw instructions to the screen
draw_set_color(c_white);
draw_text( view_wview[0]/2, 50, "GAME PAUSED");
draw_set_font(menu_items);
if(selected=="RESUME"){
    draw_set_color(c_red);
}
draw_text(view_wport[0]/2,80, "RESUME");

draw_set_color(c_white);
if(selected=="RESTART"){
    draw_set_color(c_red);
}
draw_text(view_wport[0]/2,110, "RESTART LEVEL");
draw_set_color(c_white);
if(selected=="QUIT"){
    draw_set_color(c_red);
}
draw_text(view_wport[0]/2,140, "QUIT");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the surface to the screen

if (surface_exists(surf)){  // Make sure surface exists - if game loses focus, the surface can sometimes be lost.
    // This is just a bunch of crazy shader blur stuff, probably shouldn't change any of it.
    var sigma = shader_get_uniform(shade_blur,"sigma");
    var blurSize = shader_get_uniform(shade_blur,"blurSize");
    shader_set(shade_blur);
    shader_set_uniform_f(sigma,0.001+size);
    shader_set_uniform_f(blurSize,1.0/512.0);
    
    draw_surface(surf, view_xport[0] , view_yport[0]);
    
    shader_reset();
    // This needs to be in the DRAW event and not the DRAW GUI event because the surface is covering the entire room.
    }
else
    {
    // If the surface gets lost, the following recreates it and redraws all the instances.
    instance_activate_all(); // Activate all the instances again just for 1 step so they can be redrawn to the surface.
    surf = surface_create( room_width*2, room_height*2 );
    alarm[0] = 1; // The instances must appear to the screen for 1 step to be redrawn.
    }



/// [OPTIONAL] Draws a partially transparent rectangle over everything.
draw_set_color(c_black);
draw_set_alpha(0.5);
draw_rectangle(0,0,room_width,room_height,0);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(selected=="RESUME"){
    selected="RESTART";
}else if(selected=="RESTART"){
    selected="QUIT";
}else if(selected=="QUIT"){
    selected="RESUME";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(selected=="RESUME"){
    selected="QUIT";
}else if(selected=="RESTART"){
    selected="RESUME";
}else if(selected=="QUIT"){
    selected="RESTART";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unpause, clear surface, re-activate all objects.


surface_free(surf);
instance_activate_all(); // Activate all the objects again
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CHANGE PREDEFINED PROPERTIES
image_speed = 0.5;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CUSTOM VARIABLES
action = "IDLE";
move_speed = 0.0;
base_ms = 14.00;
accel = 0.2545
move_accel = 0;
move_accel_max = 5;
accelerating = false;
moving = false;
mov_dir = "right";
falling = true;
jump = false;
global._jump = true;
last_touched_pad = self;
slow_mo = false;
slow_meter = 10;
active_item = spr_revolver_icon;
global._active_item = "NONE";
shot_used = false;
global._super_slow = false;
global._can_jump = false;
delay_jump = false;
global.pause = false;
global.landed = false;
can_drop = false;
global._dropping = false;
_draw_sprite = spr_player_idle;
global.death_start = false;
release = false;
hit = false;
global.health = 2;
hit_active = false;
global.coins = 0;
freeze = false;
draw_gun = false;
shot_delay = 20;
// can the user use a switch at this exact moment
use_switch = false;
_max_fall_speed = 16;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw hud (includes iphone buttons) - OFF
//instance_create(0,0,obj_hud);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create game font
global.font = font_add_sprite(spr_numbers,46,false,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// handle trigger out of being hit
hit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shot_used = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.death_message = "cant take that much dmg";
  instance_create(0,0,obj_death);  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_set(90,10);
gravity = 0;

instance_create(0,0,obj_death);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// TURN THE JUMP DELAY OFF
delay_jump = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MAKE THINGS HAPPEN
image_index += 1;
gravity = 1;


// if dying create a slow upward float to heaven
if(global.death_start == true){
    gravity = 0;
    vspeed = -3;
}

// verify that we know when we have terminated the jump 
if(vspeed &gt; 0){
    action = "FALLING";
    global._jump = false;
    global._can_jump = false;
    
    hit_active = false;
    if(vspeed &gt; _max_fall_speed){
      vspeed = _max_fall_speed;
    }
}

// if we get launched into a -vertical movement
if(vspeed &lt; 0){
    global._jump = true;        
}

// dont allow the player to jump
if(delay_jump == true){
    global._can_jump = false;
}

// set appropriate sprites
if( global._can_jump == false ){
    _draw_sprite = spr_player_jumping;
}

if( hit == true ){
    _draw_sprite = spr_player_hurt;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// "SOFT WALLS"
// left wall
if( self.x &lt; 0 ){
    self.x = 0;
}
//right wall
if( self.x &gt; room_width){
    self.x = room_width;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CONSIDER ACCELLERATION
if(moving==true &amp;&amp; global._can_jump == true){
    // check to see if we should accelerate more
    if( move_accel &lt; move_accel_max ){
        move_accel += accel;
    }
}

if(move_speed = 0){
    if(action!="JUMP" &amp;&amp; action != "FALLING"){action="IDLE";}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// check health
if( global.health &lt;= 0 &amp;&amp; global.death_start == false)
{
  alarm[2] = 30;
  global.death_start = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// handle keyboard checks
if(keyboard_check(vk_right)){
    /// MOVE RIGHT
    if( global.death_start == false &amp;&amp; freeze == false){
        move_speed = base_ms+move_accel
        x += move_speed;
        if(action!="JUMP"){action = "RUNNING";}
        moving = true;
        mov_dir = "right";
        image_xscale = 1;
        _draw_sprite = spr_player_running;
    }

}else if(keyboard_check(vk_left)){
    /// MOVE LEFT
    if( global.death_start == false &amp;&amp; freeze = false){
        move_speed = -(base_ms+move_accel)
        x += move_speed;
        if(action!="JUMP"){action = "RUNNING";}
        mov_dir = "left";
        moving = true;
        image_xscale = -1;
        _draw_sprite = spr_player_running;
    }
}else if(keyboard_check(vk_escape)){
    instance_create(0,0,obj_pause);
    global.pause = true;
    pauseTime = current_time;
}

if(keyboard_check(vk_space)){
    /// HANDLE JUMP
    if (global._can_jump == true &amp;&amp; global.death_start == false &amp;&amp; freeze = false) {
        audio_play_sound(snd_jump, 10, false);
        vspeed = -21;
        action = "JUMP";
        global._can_jump = false;
        global._jump = true;
        global.landed = false;    
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// handle mouse
if mouse_wheel_down(){
    zoom=1.1;      
    view_xview[1] *= zoom;
    view_yview[1] *= zoom;
    view_wview[1]*=zoom;
    view_hview[1]*=zoom;
}

if mouse_wheel_up(){
    zoom=0.9;      
    view_xview[1] *= zoom;
    view_yview[1] *= zoom;
    view_wview[1]*=zoom;
    view_hview[1]*=zoom;  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_passable_platform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HANDLE MOVING PLATFORM
// if we are on top of the floor    
if(gravity==1){
    if(global._jump == true){
        //vspeed = 0;
        delay_jump = true;
        alarm[0] = 5;
    }else{
        // we provide a 16 height tollerance because of the height of the platform
        if( self.y &lt; other.y+20 &amp;&amp; global._dropping == false){
          gravity = 0;
          self.y = other.y;   
          motion_set(0,0);
          global.landed = true;
          can_drop = true;
          global._can_jump = true; 
          if( moving == false ){
             _draw_sprite = spr_player_idle;
          }

        }
    }
        
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_moving_platform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HANDLE MOVING PLATFORM
// if we are on top of the floor    
if(gravity==1){
    if(global._jump == true){
        //vspeed = 0;
        delay_jump = true;
        alarm[0] = 5;
    }else{
        // we provide a 16 height tollerance because of the height of the platform
        if( self.y &lt; other.y+16 &amp;&amp; global._dropping == false ){
          gravity = 0;
          self.y = other.y;   
          motion_set(0,0);
          global.landed = true;
          can_drop = true;
        }   
    }
        
}
global._can_jump = true; 
if( moving == false ){
  _draw_sprite = spr_player_idle;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_spike">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HANDLE DEATH
motion_set(90,10);
gravity = 0;

instance_create(0,0,obj_death);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.sprite_index == spr_door_open){
    global.pause = true;
    pauseTime = current_time;
    freeze = true;
    y = other.y+140;
    instance_create(0,0, obj_level_end);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_laserGunTop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HANDLE MOVING PLATFORM
// if we are on top of the floor    
if(gravity==1){
    if(global._jump == true){
        //vspeed = 0;
        delay_jump = true;
        alarm[0] = 5;
    }else{
        // we provide a 16 height tollerance because of the height of the platform
        if( self.y &lt; other.y+20 &amp;&amp; global._dropping == false){
          gravity = 0;
          self.y = other.y;   
          motion_set(0,0);
          global.landed = true;
          global._can_jump = true; 
          if( moving == false ){
             _draw_sprite = spr_player_idle;
          }

        }
    }
        
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_box">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if ( (self.x-37) &lt; other.x){
       self.x = other.x-35;
    }else{
      self.x = other.x+105;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boxTop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HANDLE MOVING PLATFORM
// if we are on top of the floor    
if(gravity==1){
    if(global._jump == true){
        //vspeed = 0;
        delay_jump = true;
        alarm[0] = 5;
    }else{
        // we provide a 16 height tollerance because of the height of the platform
        if( self.y &lt; other.y+20 &amp;&amp; global._dropping == false){
          gravity = 0;
          self.y = other.y;   
          motion_set(0,0);
          global.landed = true;
          
          global._can_jump = true; 
          if( moving == false ){
             _draw_sprite = spr_player_idle;
          }

        }
    }
        
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_raygun">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DESTROY RAYGUN
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ACTIVATE RAYGUN DRAWING
draw_gun = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_cliff">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// mix together the wall and the floor
if( global._jump == false){
    if ( (self.x-37) &lt; other.x){
       self.x = other.x-10;
    }else{
      self.x = other.x+80
    }
}else{
// if we are on top of the floor    
if(gravity==1 &amp;&amp; global._jump == false){
        self.y = other.y;   
        //motion_set(0,0);
        global._can_jump = true; 
global.landed = true;
}else if(global._jump == true ){
  vspeed = 8;
}

if( moving == false ){
  if(_draw_sprite == spr_player_jumping){
    audio_play_sound(snd_land,10,false);
  }
  _draw_sprite = spr_player_idle;
}


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HANDLE COLLISION
// if we are on top of the floor    
if(gravity==1){
       if(global._jump == true &amp;&amp; self.y &gt; other.y){
         motion_set(0,0);
         self.y = other.y+32;
         global._can_jump = false;  
        //delay_jump = true;
        //alarm[0] = 5;
    }else{
        gravity = 0;
        self.y = other.y;   
        motion_set(0,0);
        global._can_jump = true;     
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HANDLE COLLISION
/*
if(other.side=="right"){   
    self.x = other.x+32+3;
    gravity=1;
}else if(other.side=="left"){
    self.x = other.x-13;
    gravity = 1;
}   
*/
if ( (self.x-37) &lt; other.x){
   self.x = other.x-10;
}else{
  self.x = other.x+90
}
//motion_set(0,0);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_floor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HANDLE COLLISION
// if we are on top of the floor    
if(gravity==1 ){
        self.y = other.y;        
        motion_set(0,0);            
        global._can_jump = true; 
        global.landed = true;
        if(action!="RUNNING"){action = "LANDED";}
}
if( moving == false ){
  if(_draw_sprite == spr_player_jumping){
    audio_play_sound(snd_land,10,false);
  }
  _draw_sprite = spr_player_idle;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_death_device">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HANDLE DEATH
if(global.death_start == false){
alarm[1] = 20;
global.death_start = true;
global.death_message = other.message
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ramp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HANDLE RAMP EFFECT
if(moving == true){ 
 self.x += 1;
 self.y = other.y+3
}else{
    if(gravity==1){
        gravity = 0;
        self.y = other.y;   
        motion_set(0,0);
    }
    global._can_jump = true; 
}


//motion_set(0,0);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_flag_red">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.pause = true;
pauseTime = current_time;
freeze = true;
motion_set(0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SHOTS FIRED
if(draw_gun == true &amp;&amp; shot_used == false){
    if(mov_dir == "right"){
        instance_create(x,y,obj_rayshot_right);
    }else{
        instance_create(x-70,y,obj_rayshot_left);
    }
    shot_used = true;
    alarm[3] = shot_delay;
end
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CREATE SIDE WALLS
//instance_create(self.x,self.y,obj_block_rl);
//instance_create(self.x,self.y,obj_block_rv);
message = "YOU CAN'T SWIM"
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> /// DRAW PLAYER
if(global.death_start == true){
draw_set_blend_mode( bm_add );
 draw_circle_color(100, 100, 50, c_blue, c_black, 0);
}
draw_sprite_ext( _draw_sprite,image_index,self.x,self.y, image_xscale, image_yscale, 0, c_white, 1 );
draw_set_blend_mode( bm_normal ); 


if(global._active_item=="REVOLVER"){
    if(image_index==0){
        draw_sprite(spr_revolver,image_index,self.x+8,self.y);
    }else{
        draw_sprite(spr_revolver,image_index,self.x,self.y);
    }
}else if(global._active_item=="LASER"){
    if(image_index==0){
        draw_sprite(spr_laser_gun,image_index,self.x+8,self.y);
    }else{
        draw_sprite(spr_laser_gun,image_index,self.x,self.y);
    }
}
if(jump==true){
    draw_sprite(spr_cmd_jump,0,self.x, self.y-50);
}

//TODO: wrap this with a variable
if( draw_gun == true ){
//draw raygun SOLID
    draw_sprite_ext(spr_raygun,0,self.x,self.y,image_xscale, image_yscale, 0, c_white, 1);
}
//draw umbrella NEEDS WORK
/*
if(global._jump == true){
    draw_sprite_ext(spr_umbrella,1,self.x-10,self.y-10,image_xscale, image_yscale, 0, c_white, 1);
}else{
    draw_sprite_ext(spr_umbrella,0,self.x-10,self.y-10,image_xscale, image_yscale, 0, c_white, 1);
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw custom developer hud
draw_set_font(devF);
draw_set_color(c_white);

draw_text(10,10, "Move Speed: "+string(move_speed));
draw_text(10,35, "Acceleration: "+string(move_accel));

draw_text(10, 85, "State: "+string(action));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( can_drop == true ){
    global._can_jump = false;
    global._dropping = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* balls old implementation for a jump pad during ludum
// USE JUMP PAD
if(jump == true){
    vspeed = -28;
    jump = false;
    ob = collision_rectangle(self.x-sprite_xoffset,self.y,self.x+32-sprite_xoffset, self.y+10, obj_jump_pad, true, true);
    ob.active = false;
    audio_play_sound(snd_jump, 1, false);
}
*/
if(use_switch == true){
    audio_play_sound(snd_switch, 10, false);    
    o = obj_blueLaserSwitch;
    if( o.image_index == 0){
        o.image_index = 1;
    }else{
        o.image_index = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// STOP MOVEMENT
moving = false;
if(global._jump == false){
    _draw_sprite = spr_player_idle;
}
move_accel = 0;
/*
hspeed = 0;
*/
hspeed = hspeed - min(abs(hspeed), 3.2545) * sign(hspeed)
move_speed = hspeed;
release = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// STOP MOVEMENT
moving = false;
_draw_sprite = spr_player_idle;
move_accel = 0;
release = true;
/*
moving = false;
hspeed = 0;
//motion_set(0,0);
_draw_sprite = spr_player_idle;
move_accel = 0;
*/
hspeed = hspeed - min(abs(hspeed), 0.2545) * sign(hspeed)
move_speed = hspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// END JUMPING
if( vspeed &lt; 0 ) {
    vspeed = 0;
}
//global._jump = false;
     
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>accelerating = false;
move_accel = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>g_factor = 1;
points = 0;
image_speed = 0.225;
short_jump = false; falling = false; jumpable = false;dead=false;

draw_left_indicator=false; draw_right_indicator=false;

quit_pressed = false; pause_pressed = false; sound_pressed = false;

global.paused = false; button_pressed = false;
global.ask_quit = false;
global.sound_on = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_pressed = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>button_pressed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_left_indicator = false;
draw_right_indicator = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed = 0;
short_jump = false;
big_jump = false;
falling = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.start == false &amp;&amp; dead == false &amp;&amp; jumpable == true ){

    if(mouse_check_button(mb_left) &amp;&amp; mouse_x &gt; room_width-110 &amp;&amp; mouse_y &lt; 50 &amp;&amp; button_pressed == false){
        button_pressed = true; alarm[2] = 10;
        if(quit_pressed == false){
            quit_pressed = true; global.paused = true; global.ask_quit = true;
            deactivate_waves();
        }
     }else if(mouse_check_button(mb_left) &amp;&amp; mouse_x &gt; room_width-160 &amp;&amp; mouse_x &lt; room_width-110 &amp;&amp; mouse_y &lt;50 &amp;&amp; button_pressed == false){
        button_pressed = true; alarm[2] = 10;
        if(pause_pressed == false){
            instance_deactivate_object(obj_wave1);instance_deactivate_object(obj_wave2);instance_deactivate_object(obj_wave3);
            instance_deactivate_object(obj_wave4);instance_deactivate_object(obj_wave5);
            pause_pressed = true;
            global.paused = true;
        }else{
            instance_activate_object(obj_wave1);instance_activate_object(obj_wave2);instance_activate_object(obj_wave3);instance_activate_object(obj_wave4);
            instance_activate_object(obj_wave5);
            pause_pressed = false;
            global.paused = false;        
        }
     }else if(mouse_check_button(mb_left) &amp;&amp; mouse_x &gt; room_width-210 &amp;&amp; mouse_x &lt; room_width-160 &amp;&amp; mouse_y &lt; 50 &amp;&amp; button_pressed == false){
     button_pressed = true; alarm[2] = 10;
        if(sound_pressed == false){
            sound_pressed = true;
            change_sound_setting();
            alarm[3] = 15;
        }
     }
     else if(mouse_check_button(mb_left) &amp;&amp; mouse_x &lt; room_width/2 &amp;&amp; jumpable == true &amp;&amp; global.paused == false &amp;&amp; button_pressed == false){
        draw_left_indicator = true; alarm[1] = 25;
        short_jump = true;
        jumpable = false;
        vspeed = -12;
        alarm[0] = 10;
        sprite_index = spr_player_jumping;    
    }else if(mouse_check_button(mb_left) &amp;&amp; mouse_x &gt; room_width/2 &amp;&amp; jumpable == true &amp;&amp; global.paused == false &amp;&amp; button_pressed == false){
        draw_right_indicator = true; alarm[1] = 25;
        big_jump = true;
        jumpable = false;
        vspeed = -22;
        alarm[0] = 15;
        sprite_index = spr_player_jumping;    
    }
/*
    if(mouse_check_button(mb_left) &amp;&amp; jumpable == true ){//need to consider jump used+ falling
        short_jump = true;
        jumpable = false;
        vspeed = -12;
        alarm[0] = 10;
        sprite_index = spr_player_jumping;
    }else if(mouse_check_button(mb_right) &amp;&amp; jumpable == true){
        big_jump = true;
        jumpable = false;
        vspeed = -22;
        alarm[0] = 15;
        sprite_index = spr_player_jumping;
    }
*/
}
if(dead==true){
    if(mouse_check_button(mb_left)&amp;&amp; mouse_x &gt; 0 &amp;&amp; mouse_x &lt; room_width/2){
        global.mode = "EASY";
        room_restart();
    }else if(mouse_check_button(mb_left)&amp;&amp; mouse_x &gt; room_width/2 &amp;&amp; mouse_x &lt; room_width){
        room_restart();
    }
}
if(global.ask_quit == true &amp;&amp; button_pressed == false){
    if(mouse_check_button(mb_left)&amp;&amp; mouse_x &gt; 0 &amp;&amp; mouse_x &lt; room_width/2){
        game_end();
    }else if(mouse_check_button(mb_left)&amp;&amp; mouse_x &gt; room_width/2 &amp;&amp; mouse_x &lt; room_width){
        button_pressed = true; alarm[2] = 10;
        instance_activate_object(obj_wave1);instance_activate_object(obj_wave2);instance_activate_object(obj_wave3);instance_activate_object(obj_wave4);
        instance_activate_object(obj_wave5);
        global.paused = false; global.ask_quit = false;quit_pressed = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(short_jump == false &amp;&amp; dead == false){ // should be more general
    y += 8 * g_factor;    
}
if(falling == true){
    g_factor += 0.08;
}

if(y &gt;=512){ // want to always land on the floor
    falling = false;
    y = 512;
    sprite_index = spr_player_running;
    g_factor = 1;
    jumpable = true;
}

if(dead == true){
    if(y &lt;= room_height/2){
        y = room_height/2;
    }
}

x = room_width / 2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.paused == true){
    hspeed = 0;
    background_hspeed[view_current] = 0;
    image_speed = 0;
}else{
    image_speed = 0.225;
    background_hspeed[view_current] = global.run_speed/4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = true;
global.run_speed = 0;//need to also adjust the background speed
background_hspeed[view_current] = 0;
sprite_index = spr_player_hit;
vspeed = -5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_platformPlayer</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_platformPlayer</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_platformPlayer</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_platformPlayer</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_platformPlayer</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(future_font);
draw_set_valign(fa_center);
draw_set_color(c_white);

display_set_gui_size(room_width, room_height);
//draw gui specifics
if(quit_pressed == true){
    draw_sprite(spr_quit_button,1,room_width-49, 0); //49=sprite width (or magic)
}else{
    draw_sprite(spr_quit_button,0,room_width-49, 0);
}
if(pause_pressed == true){
    draw_sprite(spr_pause_button, 1, room_width-100,0);
}else{
    draw_sprite(spr_pause_button, 0, room_width-100,0);
}

if(sound_pressed == true){
    if( global.sound_on == true){
        draw_sprite(spr_sound_button, 1, room_width-150,0);
    } else{
        draw_sprite(spr_sound_button, 3, room_width-150,0);
    }
}else{
    if( global.sound_on == true){
        draw_sprite(spr_sound_button, 0, room_width-150,0);
    }else{
        draw_sprite(spr_sound_button, 2, room_width-150,0);
    }
}
if(dead==true){
    //draw_text(room_width/2, room_height/2, "Try Again?");
    draw_set_font(mode_font); draw_set_halign(fa_center); draw_set_color(c_black);
    draw_text(room_width/4, room_height/2, "Enable Easy Mode#    &amp;#Try Again");
    draw_text(room_width/2 + room_width/4, room_height/2, "Try again in Man Mode");
    
}else{
    draw_set_halign(fa_center); draw_set_valign(fa_center);
    draw_text(room_width/2, 50, string(points));
}

if(draw_left_indicator==true){
    draw_set_alpha(0.2);
    draw_rectangle(0,0,room_width/2, room_height, false);
    draw_set_alpha(1);
}
if(draw_right_indicator==true){
    draw_set_alpha(0.2);
    draw_rectangle(room_width/2,0,room_width, room_height, false);
    draw_set_alpha(1);
}

if(global.mode=="HARD"){
    draw_set_font(mode_font);draw_set_color(c_red);
    draw_set_valign(fa_left);
    draw_set_halign(fa_left);
    draw_text(0,room_height-25, "MAN MODE ENABLED");
}else if(global.mode=="EASY"){
    draw_set_font(mode_font);draw_set_color(c_red);
    draw_set_valign(fa_left);
    draw_set_halign(fa_left);
    draw_text(0,room_height-25, "BABY MODE ENABLED");
}

if(global.paused == true &amp;&amp; global.ask_quit == false){
    draw_set_color(c_white);draw_set_font(future_font); draw_set_halign(fa_center); draw_set_valign(fa_center);
    draw_text(room_width/2, room_height/2, "GAME PAUSED");
}

if(global.ask_quit == true){
     draw_set_color(c_red);draw_set_font(future_font); draw_set_halign(fa_center); draw_set_valign(fa_center);
    draw_text(room_width/2, room_height/4, "GIVING UP?");
    draw_set_color(c_white);
    draw_text(room_width/4, room_height/2, "YES");
    draw_text(room_width/2+room_width/4, room_height/2, "NO");   
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>33,92</point>
    <point>46,46</point>
  </PhysicsShapePoints>
</object>

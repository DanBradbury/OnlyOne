<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>num_keys = 0;
key_grabbed = false;
global._right = YoYo_AddVirtualKey( view_xview[view_current]+185, view_yview[view_current]+425, 120, 97, vk_right);
global._left = YoYo_AddVirtualKey( view_xview[view_current]+30, view_yview[view_current]+425, 120, 97, vk_left);

global._up = YoYo_AddVirtualKey( view_xview[view_current]+120, view_yview[view_current]+350, 110, 75, vk_up);
global._down = YoYo_AddVirtualKey( view_xview[view_current]+120, view_yview[view_current]+522, 110, 75, vk_down);

global._space = YoYo_AddVirtualKey( view_xview[view_current]+700, view_yview[view_current]+450, 160, 160, vk_space);
global._shift = YoYo_AddVirtualKey( view_xview[view_current]+890, view_yview[view_current]+400, 160, 160, vk_shift);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw dpad
draw_sprite_ext(spr_flatdark,0,view_xview[view_current]+50, view_yview[view_current]+350, 2,2,0, c_white, 1);

/* DRAW DPAD HITBOXES 
virtual_key_show(global._up);
virtual_key_show(global._down);
virtual_key_show(global._right);
virtual_key_show(global._left);
virtual_key_show(global._space);
virtual_key_show(global._shift);
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW BUTTONS
draw_sprite_ext(spr_a,0,view_xview[view_current]+700, view_yview[view_current]+450, 2,2,0, c_white, 1);
draw_sprite_ext(spr_b,0,view_xview[view_current]+890, view_yview[view_current]+400, 2,2,0, c_white, 1);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// draw health
if( global.health == 2 ){
  draw_sprite(spr_heart, 0, view_xview[view_current], view_yview[view_current]);
}else if( global.health == 1 ){
  draw_sprite(spr_heart, 1, view_xview[view_current], view_yview[view_current]);
}else if( global.health == 0 ){
  draw_sprite(spr_heart, 2, view_xview[view_current], view_yview[view_current]);
}

// draw active keys on the map
for(i=1; i&lt;=global.keys; i++){
  if(num_keys &gt;= i){
    draw_sprite(spr_enabled_key, 0, view_xview[view_current], view_yview[view_current]+100);
  }else{
    draw_sprite(spr_disabled_key, 0, view_xview[view_current], view_yview[view_current]+100);
  }
}

// draw coins
draw_sprite(spr_coin_hud, 0, view_xview[view_current], view_yview[view_current]+50);
draw_set_halign(fa_left);
draw_set_font(global.font);
draw_text(view_xview[view_current]+50, view_yview[view_current]+50, string(global.coins));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
